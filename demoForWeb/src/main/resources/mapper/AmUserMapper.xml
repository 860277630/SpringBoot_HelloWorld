<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.AmUserMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.model.AmUser">
    <id column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_open_id" jdbcType="VARCHAR" property="userOpenId" />
    <result column="user_mobile" jdbcType="VARCHAR" property="userMobile" />
    <result column="user_no" jdbcType="VARCHAR" property="userNo" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_photo" jdbcType="VARCHAR" property="userPhoto" />
    <result column="user_type_id" jdbcType="TINYINT" property="userTypeId" />
    <result column="user_focus_state_id" jdbcType="TINYINT" property="userFocusStateId" />
    <result column="account_id" jdbcType="VARCHAR" property="accountId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, user_open_id, user_mobile, user_no, user_name, user_photo, user_type_id,
    user_focus_state_id, account_id
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.model.AmUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from am_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from am_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from am_user
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from am_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.model.AmUserExample">
    delete from am_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.AmUser">
    insert into am_user (user_id, user_open_id, user_mobile,
      user_no, user_name, user_photo,
      user_type_id, user_focus_state_id, account_id
      )
    values (#{userId,jdbcType=VARCHAR}, #{userOpenId,jdbcType=VARCHAR}, #{userMobile,jdbcType=VARCHAR},
      #{userNo,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{userPhoto,jdbcType=VARCHAR},
      #{userTypeId,jdbcType=TINYINT}, #{userFocusStateId,jdbcType=TINYINT}, #{accountId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.AmUser">
    insert into am_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userOpenId != null">
        user_open_id,
      </if>
      <if test="userMobile != null">
        user_mobile,
      </if>
      <if test="userNo != null">
        user_no,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPhoto != null">
        user_photo,
      </if>
      <if test="userTypeId != null">
        user_type_id,
      </if>
      <if test="userFocusStateId != null">
        user_focus_state_id,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userOpenId != null">
        #{userOpenId,jdbcType=VARCHAR},
      </if>
      <if test="userMobile != null">
        #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="userNo != null">
        #{userNo,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPhoto != null">
        #{userPhoto,jdbcType=VARCHAR},
      </if>
      <if test="userTypeId != null">
        #{userTypeId,jdbcType=TINYINT},
      </if>
      <if test="userFocusStateId != null">
        #{userFocusStateId,jdbcType=TINYINT},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.model.AmUserExample" resultType="java.lang.Long">
    select count(*) from am_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update am_user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.userOpenId != null">
        user_open_id = #{record.userOpenId,jdbcType=VARCHAR},
      </if>
      <if test="record.userMobile != null">
        user_mobile = #{record.userMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.userNo != null">
        user_no = #{record.userNo,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userPhoto != null">
        user_photo = #{record.userPhoto,jdbcType=VARCHAR},
      </if>
      <if test="record.userTypeId != null">
        user_type_id = #{record.userTypeId,jdbcType=TINYINT},
      </if>
      <if test="record.userFocusStateId != null">
        user_focus_state_id = #{record.userFocusStateId,jdbcType=TINYINT},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update am_user
    set user_id = #{record.userId,jdbcType=VARCHAR},
    user_open_id = #{record.userOpenId,jdbcType=VARCHAR},
    user_mobile = #{record.userMobile,jdbcType=VARCHAR},
    user_no = #{record.userNo,jdbcType=VARCHAR},
    user_name = #{record.userName,jdbcType=VARCHAR},
    user_photo = #{record.userPhoto,jdbcType=VARCHAR},
    user_type_id = #{record.userTypeId,jdbcType=TINYINT},
    user_focus_state_id = #{record.userFocusStateId,jdbcType=TINYINT},
    account_id = #{record.accountId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.AmUser">
    update am_user
    <set>
      <if test="userOpenId != null">
        user_open_id = #{userOpenId,jdbcType=VARCHAR},
      </if>
      <if test="userMobile != null">
        user_mobile = #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="userNo != null">
        user_no = #{userNo,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPhoto != null">
        user_photo = #{userPhoto,jdbcType=VARCHAR},
      </if>
      <if test="userTypeId != null">
        user_type_id = #{userTypeId,jdbcType=TINYINT},
      </if>
      <if test="userFocusStateId != null">
        user_focus_state_id = #{userFocusStateId,jdbcType=TINYINT},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.AmUser">
    update am_user
    set user_open_id = #{userOpenId,jdbcType=VARCHAR},
      user_mobile = #{userMobile,jdbcType=VARCHAR},
      user_no = #{userNo,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_photo = #{userPhoto,jdbcType=VARCHAR},
      user_type_id = #{userTypeId,jdbcType=TINYINT},
      user_focus_state_id = #{userFocusStateId,jdbcType=TINYINT},
      account_id = #{accountId,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
</mapper>